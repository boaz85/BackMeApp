"""
Django settings for BackMeApp project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import dj_database_url
from backmeapp.settings import auth_backends
from backmeapp.settings.auth_backends import ServicesData

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'b4r!%y!kd^(iqt6kfjck)5_iww%hq$i8az-we!$a-$3buafuq='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AUTH_USER_MODEL = 'users.User'

SOCIAL_AUTH_USER_MODEL = 'users.User'


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'social.apps.django_app.default',
    'users',
    'services'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'backmeapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social.apps.django_app.context_processors.backends',
                'social.apps.django_app.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'backmeapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

LOCAL_DATABASE_URL = 'postgres://robot@127.0.0.1/backmeapp'

DATABASES = {'default': dj_database_url.config(default=LOCAL_DATABASE_URL)}
DATABASES['default']['ENGINE'] = 'django_postgrespool'

AUTHENTICATION_BACKENDS = (
    'users.auth_backends.GoogleDriveBackend',
    'users.auth_backends.GoogleGmailBackend',
    'users.auth_backends.GoogleSignInBackend',
    'social.backends.dropbox.DropboxOAuth2',
    'django.contrib.auth.backends.ModelBackend'
)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'NOTSET',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'NOTSET',
        },
        'django.request': {
            'handlers': ['console'],
            'propagate': False,
            'level': 'ERROR'
        }
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

SOCIAL_AUTH_GOOGLE_DRIVE_KEY = ServicesData.GOOGLE_DRIVE.key
SOCIAL_AUTH_GOOGLE_DRIVE_SCOPE = ServicesData.GOOGLE_DRIVE.scope
SOCIAL_AUTH_GOOGLE_DRIVE_AUTH_EXTRA_ARGUMENTS = ServicesData.GOOGLE_DRIVE.auth_extra_arguments
SOCIAL_AUTH_GOOGLE_DRIVE_LOGIN_REDIRECT_URL = ServicesData.GOOGLE_DRIVE.login_redirect_url
SOCIAL_AUTH_GOOGLE_DRIVE_SECRET = ''

SOCIAL_AUTH_GOOGLE_GMAIL_KEY = ServicesData.GOOGLE_GMAIL.key
SOCIAL_AUTH_GOOGLE_GMAIL_SCOPE = ServicesData.GOOGLE_GMAIL.scope
SOCIAL_AUTH_GOOGLE_GMAIL_AUTH_EXTRA_ARGUMENTS = ServicesData.GOOGLE_GMAIL.auth_extra_arguments
SOCIAL_AUTH_GOOGLE_GMAIL_LOGIN_REDIRECT_URL = ServicesData.GOOGLE_GMAIL.login_redirect_url
SOCIAL_AUTH_GOOGLE_GMAIL_SECRET = ''

SOCIAL_AUTH_GOOGLE_SIGNIN_KEY = ServicesData.GOOGLE_SIGNIN.key
SOCIAL_AUTH_GOOGLE_SIGNIN_SCOPE = ServicesData.GOOGLE_SIGNIN.scope
SOCIAL_AUTH_GOOGLE_SIGNIN_LOGIN_REDIRECT_URL = ServicesData.GOOGLE_SIGNIN.login_redirect_url
SOCIAL_AUTH_GOOGLE_SIGNIN_SECRET = ''

SOCIAL_AUTH_DROPBOX_OAUTH2_KEY = ServicesData.DROPBOX.key
SOCIAL_AUTH_DROPBOX_OAUTH2_LOGIN_REDIRECT_URL = ServicesData.DROPBOX.login_redirect_url
SOCIAL_AUTH_DROPBOX_OAUTH2_SECRET = ''

SOCIAL_AUTH_USER_FIELDS = ['email', 'first_name', 'last_name']

try:
    from secrets import *
except ImportError:
    pass